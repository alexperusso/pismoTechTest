version: '3'
services:
  mongosrv:
    image: docker.io/library/mongo:4.4.16
    networks:
      - rede
    deploy:
      resource:
        limits:
          memory: 350M
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=cartoes
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", 'db.runCommand("ping").ok', "|", "mongo", "localhost:27017/cartoes", "--quiet" ]
      interval: 30s
      timeout: 10s
      retries: 3

  mongoweb:
    image: docker.io/library/mongo-express:1.0.0-alpha
    deploy:
      resource:
        limits:
          memory: 350M
    networks:
      - rede
    ports:
      - "7071:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      #- ME_CONFIG_MONGODB_AUTH_DATABASE=project
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_BASICAUTH_USERNAME=mongoexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mongoexpress
    links:
      - mongosrv
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=3", "--spider", "http://mongoexpress:mongoexpress@mongoweb:8081  || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - mongosrv


  #mensageria utilizada pela infra e servicos
  rabbitmq:
    image: docker.io/library/rabbitmq:3.11.5-management
    deploy:
      resource:
        limits:
          memory: 128M
    networks:
      - rede
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 20s
      timeout: 5s
      retries: 10

  #centralizacao de logs
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
    deploy:
      resource:
        limits:
          memory: 512M
    networks:
      - rede
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: on-failure
    environment:
      - cluster.name=elastic-cluster
      - discovery.type=single-node
      - http.host=0.0.0.0
      - xpack.monitoring.enabled=true
      - xpack.security.enabled=false
    volumes:
      - elastic:/usr/share/elasticsearch/data

  #Visualizacao dos logs centralizados    
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.8
    deploy:
      resource:
        limits:
          memory: 128M
    networks:
      - rede
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
  
  #Coletor de traces e exibicao na UI
  zipkin:
    image: docker.io/openzipkin/zipkin:2.12.9
    deploy:
      resource:
        limits:
          memory: 128M
    networks:
      - rede
    environment:
      #- STORAGE_TYPE: mem
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=http://elasticsearch:9200
      - RABBIT_ADDRESSES=rabbitmq:5672
      - RABBIT_QUEUE=zipkin
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest
      #- RABBIT_VIRTUAL_HOST=app_vhost
      - RABBIT_USE_SSL=false
      #- RABBIT_CONCURRENCY=1
      - RABBIT_CONNECTION_TIMEOUT=60000
    ports:
      - "9411:9411"
    depends_on:
      - rabbitmq
      - elasticsearch
    restart: on-failure
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9411/health  || exit 1" ]
      interval: 10s
      start_period: 15s
      retries: 3

  #microservicos de infra
  eurekasrv:
    build: infra/discovery
    deploy:
      resource:
        limits:
          memory: 128M
    networks:
      - rede
    ports:
      - "8761:8761"

  gateway:
    build: infra/gateway
    depends_on:
      - eurekasrv
    deploy:
      resource:
        limits:
          memory: 128M
    networks:
      - rede
    ports:
      - "8060:8060"

  #microservicos de negocio
  contasrv:
    build: microsvc/conta
    depends_on:
      - eurekasrv
      - gateway
      - mongosrv
      - zipkin
    deploy:
      resource:
        limits:
          memory: 128M
    networks:
      - rede
    ports:
      - "8061:8061"

  transacaosrv:
    build: microsvc/transacao
    depends_on:
      - eurekasrv
      - gateway
      - mongosrv
      - zipkin
    deploy:
      resource:
        limits:
          memory: 128M
    networks:
      - rede
    ports:
      - "8062:8062"

networks:
  rede:
    name: rede

volumes:
  mongodata:
  elastic:
